import copy
import unittest
import testlib
import json
import random
from ddt import file_data, ddt, data, unpack

import program02 as program

@ddt
class Test(testlib.TestCase):

    def do_test(self, stringa, expected):
        '''Implementazione del test
            - stringa:   codifica della sequenza iniziale 
            - expected: lista risultante attesa
        '''
        with    self.ignored_function('builtins.print'), \
                self.ignored_function('pprint.pprint'), \
                self.timer(3):
            result   = program.es2(stringa)
        self.assertEqual(type(result), list,     "il risultato non e' una lista ")
        self.assertEqual(result,       expected, "il risultato non e' corretto")

    def test_1_Sequenza_di_9_numeri_pari_dispari_alternati(self):
        '''La sequenza e' '1 2 3 4 5 6 7 8 9' '''
        return self.do_test('1 2 3 4 5 6 7 8 9', ['1 2 3 4 5 6 7 8 9'])
        
    def test_2_Sequenza_2_2_4_4(self):
        '''La sequenza e' '2 2 4 4' '''
        return self.do_test('2 2 4 4', ['3', '2 3', '3 4', '2 3 4'])


    def test_3_Sequenza_di_6_interi(self):
        '''La sequenza e' 10 20 30 40 5 1'''
        return self.do_test('10 20 30 40 5 1', ['8', '14', '17', '15 20 1', '10 25 40 3'])

    def test_4_Sequenza_dei_primi_10_interi_pari(self):
        '''la sequenza dei primi 10 interi pari'''
        stringa='2 4 6 8 10 12 14 16 18 20'
        expected=[
        '5', '6', '7', '8', '9', '10', '12', '13', '14', '15', '16', '17', '2 11', '2 13', 
        '5 14', '5 16', '6 17', '8 17', '9 20', '11 20','2 5 12', '2 5 16', '2 7 20', 
        '2 9 20', '2 11 20', '2 13 20', '2 15 20', '3 6 11', '3 6 17', '3 10 19', '3 12 19', 
        '5 16 19', '6 17 20', '10 17 20', '11 16 19', '2 7 12 17', '5 10 15 20', 
        '3 6 9 12 17', '3 6 11 16 19', '5 10 13 16 19', '2 5 8 11 14 17 20']
        return self.do_test(stringa, expected)

    def test_5_Sequenza_dei_primi_10_interi_dispari(self):
        '''la sequenza dei primi 10 interi pari'''
        stringa='1 3 5 7 9 11 13 15 17 19'
        expected=['4', '5', '6', '7', '8', '9', '11', '12', '13', '14', '15', '16', 
        '1 10', '1 12', '4 13', '4 15', '5 16', '7 16', '8 19', '10 19', '1 4 11', 
        '1 4 15', '1 6 19', '1 8 19', '1 10 19', '1 12 19', '1 14 19', '2 5 10', '2 5 16', 
        '2 9 18', '2 11 18', '4 15 18', '5 16 19', '9 16 19', '10 15 18', '1 6 11 16', 
        '4 9 14 19', '2 5 8 11 16', '2 5 10 15 18', '4 9 12 15 18', '1 4 7 10 13 16 19']
        return self.do_test(stringa, expected)

    def test_6_Sequenza_di_10_pari_a_caso(self):
        stringa = '366 826 140 540 10 584 318 282 928 110'
        expected = [
                '245', '253', '267', '268', '274', '275', '279', '282', '286', '297', '317', '338', '339', 
                '356', '371', '372', '378', '379', '385', '396', '403', '421', '428', '433', '442', '457', '460', 
                '232 319', '232 473', '340 519', '354 519', '366 285', '366 301', '366 321', '366 339', '366 345', 
                '366 349', '366 369', '366 389', '366 401', '366 467', '366 575', '368 295', '368 297', '368 451', 
                '368 519', '403 362', '413 110', '419 110', '429 110', '449 110', '453 110', '467 110', '473 110', 
                '475 110', '497 110', '511 110', '513 110', '596 211', '596 247', '596 257', '596 401', '641 110', 
                '232 599 110', '232 685 110', '239 442 519', '345 282 519', '363 282 519', '366 483 374', '366 489 110', 
                '366 527 110', '366 569 110', '366 649 110', '368 437 110', '403 300 519', '454 269 110', '454 297 362', 
                '454 577 110', '468 269 110', '468 297 362', '468 577 110', '596 387 110', '596 459 110', 
                '232 451 282 519', '366 379 282 519', '366 379 442 519', '366 415 282 519', '366 423 282 519', 
                '366 583 10 319', '366 583 10 473', '366 583 226 519', '368 275 442 519', '368 363 282 519', 
                '403 318 605 110', '454 297 300 519', '468 297 300 519', '596 175 442 519', '596 313 282 519', 
                '366 483 540 269 110', '366 483 540 297 362', '366 483 540 577 110', '366 583 10 599 110', 
                '366 583 10 685 110', '454 297 318 605 110', '468 297 318 605 110', 
                '366 483 540 297 300 519', '366 583 10 451 282 519', '366 483 540 297 318 605 110']
        self.do_test(stringa, expected)

    def test_7_Sequenza_di_10_dispari_a_caso(self):
        stringa = '159 475 237 851 545 169 81 207 233 687'
        expected = [
                '242', '256', '275', '276', '279', '280', '289', '293', '304', '322', '326', '328', '330', 
                '331', '335', '347', '359', '361', '365', '368', '379', '381', '387', '392', '406', '409', 
                '427', '457', '458', '465', '467', '474', '482', '490', '491', '500', '502', '512', '547', 
                '159 386', '159 410', '159 420', '159 426', '159 452', '159 460', '159 480', '159 484', 
                '159 498', '159 500', '159 506', '159 508', '159 538', '216 687', '236 687', '244 687', 
                '274 687', '277 430', '277 446', '277 496', '277 542', '277 612', '277 640', '310 687', 
                '317 382', '317 502', '321 460', '326 687', '352 687', '408 687', '419 460', '564 429', '564 455', 
                '159 356 417', '159 356 453', '159 356 653', '159 396 687', '234 207 460', '277 302 687', 
                '277 698 313', '302 207 460', '317 272 687', '317 316 687', '317 398 687', '317 544 429', 
                '317 544 455', '366 207 460', '406 207 460', '435 220 687', '564 213 460', '564 271 460', '564 357 302', 
                '159 326 207 460', '159 356 371 460', '159 356 561 460', '256 81 220 687', '277 698 169 302', 
                '317 386 207 460', '317 544 213 460', '317 544 271 460', '317 544 357 302', '564 219 220 687', 
                '564 335 220 687', 
                '159 348 81 220 687', '159 356 535 220 687', '159 356 593 220 687', '159 356 851 252 687', 
                '159 480 81 220 687', '277 604 81 220 687', '277 698 125 220 687', '317 544 219 220 687', 
                '317 544 335 220 687']
        self.do_test(stringa, expected)

    def test_8_Sequenza_di_12_numeri_a_caso(self):
        stringa = '7495 8191 3988 5548 2219 3378 1306 9513 4173 906 7552 7140'
        expected = [
                '7843 4768 2219 3600', 
                '7843 4768 2219 4340', 
                '7843 4768 3079 7140', 
                '7843 4768 2219 2342 6843 4126', 
                '7843 4768 2219 2342 6857 7140', 
                '7843 4768 2219 3378 3421 7140'
                ]
        self.do_test(stringa, expected)
        
    def test_9_Sequenza_dei_primi_12_interi_pari(self):
        '''la sequenza dei primi 12 interi pari'''
        stringa='2 4 6 8 10 12 14 16 18 20 22 24'
        expected=[
                '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', 
                '2 7', '2 9', '2 11', '2 17', '2 19', '2 21', '3 10', '3 12', '3 14', '3 16', '3 18', '3 20', 
                '5 24', '6 23', '7 24', '8 23', '9 24', '10 23', '12 23', '14 23', '15 24', '16 23', '17 24', '19 24', 
                '2 5 12', '2 5 20', '2 7 16', '2 7 20', '2 7 24', '2 9 24', '2 11 24', '2 15 24', '2 17 24', 
                '2 19 24', '3 6 15', '3 6 17', '3 10 21', '3 12 21', '5 10 15', '5 10 21', '5 14 23', '5 16 21', 
                '5 16 23', '6 19 24', '6 21 24', '9 20 23', '10 19 24', '11 16 21', '11 20 23', '14 21 24', 
                '2 5 8 13', '2 5 8 15', '2 5 8 17', '2 5 8 19', '2 5 8 21', '2 5 12 23', '2 5 16 23', '2 7 20 23', 
                '2 9 20 23', '2 11 20 23', '2 13 20 23', '2 15 20 23', '3 6 9 16', '3 6 9 20', '3 6 11 24', 
                '3 6 13 24', '3 6 15 24', '3 6 17 24', '3 6 19 24', '3 10 21 24', '3 14 21 24', '5 18 21 24', 
                '6 17 20 23', '7 18 21 24', '9 18 21 24', '10 17 20 23', '11 18 21 24', '13 18 21 24', '2 5 8 11 18', 
                '2 5 8 11 20', '2 5 8 13 24', '2 5 8 19 24', '2 5 12 21 24', '2 5 14 21 24', '2 7 18 21 24', 
                '2 13 18 21 24', '3 6 11 16 21', '5 10 13 16 21', '5 10 15 20 23', '6 15 18 21 24', '8 15 18 21 24', 
                '2 5 8 11 14 19 24', '2 5 8 13 18 21 24', '2 7 12 15 18 21 24', '2 5 8 11 14 17 20 23', '3 6 9 12 15 18 21 24']
        return self.do_test(stringa, expected)

    def test_segreto1_Sequenza_5_e_5_valori_uguali(self):
        stringa = ' '.join(['1']*5 + ['3']*5)
        expected=['2', '1 2', '2 3', '1 2 3']
        return self.do_test(stringa, expected)

    def test_segreto2_Sequenza_100_pari_dispari_alternati(self):
        stringa = ' '.join(['2', '3']*100)
        expected=[stringa]
        return self.do_test(stringa, expected)

    def test_segreto3_Sequenza_10_pari_alternati(self):
        stringa = ' '.join(['2', '4']*5)
        expected=['3', '2 3 4', '2 3 4 3', '3 2 3 4', '3 2 3 4 3', '2 3 4 3 2 3 4']
        return self.do_test(stringa, expected)

    def test_segreto4_Sequenza_10_dispari_alternati(self):
        stringa = ' '.join(['21', '43']*5)
        expected=['32', '21 32 43', '21 32 43 32', '32 21 32 43', '32 21 32 43 32', '21 32 43 32 21 32 43']
        return self.do_test(stringa, expected)

if __name__ == '__main__':
    Test.main()

